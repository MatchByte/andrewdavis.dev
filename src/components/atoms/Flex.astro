---
import type { FlexProps } from '../../lib/types';

interface Props extends FlexProps {
  readonly direction: 'row' | 'column';
  readonly align: FlexProps['align'];
  readonly justify: FlexProps['justify'];
  readonly class?: string;
}

// props passed to this component
const {
  direction,
  align,
  gap,
  flex,
  justify,
  class: className,
  wrap = 'nowrap',
  ...rest
} = Astro.props;

const mobileGap = typeof gap === 'number' ? gap : (gap?.mobile ?? 0);
const desktopGap = typeof gap === 'number' ? gap : (gap?.desktop ?? 0);

const flexPropRule = flex ? 1 : !flex ? 0 : flex;
---

<div class:list={['flex-wrapper', className]} {...rest}>
  <slot />
</div>

<style
  define:vars={{
    mobileGap,
    desktopGap,
    flexPropRule,
    align,
    justify,
    direction,
    wrap,
  }}
>
  .flex-wrapper {
    display: flex;
    flex-direction: var(--direction);
    flex-wrap: var(--wrap);
    align-items: var(--align);
    justify-content: var(--justify);
    flex: var(--flexPropRule);
    gap: calc(var(--desktopGap) * 1px);
  }

  @media (max-width: 768px) {
    .flex-wrapper {
      gap: calc(var(--mobileGap) * 1px);
    }
  }
</style>
